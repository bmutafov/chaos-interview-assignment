import Head from "next/head";
import { Database } from "@/types/supabase";
import {
  createServerSupabaseClient,
  Session,
  User,
} from "@supabase/auth-helpers-nextjs";
import { GetServerSidePropsContext } from "next";
import { Button, Textarea, Title, Container, Paper, Flex } from "@mantine/core";
import AddDocument from "@/components/AddDocument";
import ListDocuments from "@/components/ListDocuments";
import React from "react";
import { Document } from "@/types/document";

type Props = {
  initialSession: Session;
  user: User;
  documents: any[];
};

export default function Home({ documents: documentProps }: Props) {
  const [documents, setDocuments] = React.useState<Document[]>(documentProps);

  const handleDocumentAdded = React.useCallback((document: Document) => {
    setDocuments((prev) => [...prev, document]);
  }, []);

  return (
    <>
      <Head>
        <title>Chaos Interview</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container>
          <AddDocument onDocumentAdded={handleDocumentAdded} />
          <ListDocuments documents={documents} />
        </Container>
      </main>
    </>
  );
}

export const getServerSideProps = async (ctx: GetServerSidePropsContext) => {
  const supabase = createServerSupabaseClient<Database>(ctx);

  const {
    data: { session },
  } = await supabase.auth.getSession();

  const { data, error } = await supabase
    .from("document_access_rights")
    .select(
      `
    documentId (
      *
    )
  `
    )
    .eq("userId", session?.user.id)
    .eq("accessTypeId", 0);

  if (!session)
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };

  return {
    props: {
      initialSession: session,
      user: session.user,
      documents: data?.map((document) => ({ ...document.documentId })) ?? [],
    } as Props,
  };
};
